1. Convert char[] to Set
   Set<Character> set = charArray.chars()
                                 .mapToObj(c -> (char) c)
                                 .collect(Collectors.toSet());

2. Convert Set to char[]
   char[] charArray = set.stream()
                         .map(String::valueOf)
                         .collect(Collectors.joining())
                         .toCharArray();

3. Convert Set<Character> to String
   String result = set.stream()
                      .map(String::valueOf)
                      .collect(Collectors.joining());

4. Convert int[] to Set<Integer>
   Set<Integer> set = Arrays.stream(a).boxed().collect(Collectors.toSet());

5. Convert Set to int[]
    int[] a = set.stream().mapToInt(i -> i).toArray();

6. Find max and min in an int[]
   int max = Arrays.stream(a).reduce(0, Integer::max); OR Arrays.stream(a).max().getAsInt();
   int min = Arrays.stream(a).reduce(0, Integer::min); OR Arrays.stream(a).min().getAsInt();
   int sum = Arrays.stream(a).sum();
   int cnt = Arrays.stream(a).count();
   int avg = (int) Arrays.stream(a).average().orElse(0);

7. new SimpleDateFormat("dd-MMM-yyyy").format(new Date());
   LocalDate.now().format(DateTimeFormatter.ofPattern("dd-MMM-yyyy"));

8. Arrays.stream(a).filter(x -> map.get(x) > a.length / 2).findFirst().orElse(-1);

9. Comparator.reverseOrder() = (k1, k2) -> k2.compareTo(k1)
   Comparable::compareTo     = k1.compareTo(k2)
   Map.Entry::getKey         = entry -> entry.getKey()
   Map.Entry::getValue       = entry -> entry.getValue()
